#define THREE_THUMBS
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#ifdef EXTERNAL_POWER
#    include <dt-bindings/zmk/ext_power.h>
#endif

// Layer aliases
#define DEF 0
#define CLM 1
#define GME 2
#define SYM 3
#define NAV 4
#define FUN 5
#define MOU 6

// Desktop and tab navigation shortcuts
#define D_LT   LC(LEFTD_LT   LC(LEFT)
#define D_RT   LC(RIGHT)
#define TAB_RT LC(TAB)
#define TAB_LT LC(LS(TAB))

// Meh and Hyper

#define MEH LC(LS(LALT))
#define HYPER LG(LC(LS(LALT)))
#define U_MOUSE_MOVE_MAX 1500                    /* <--- New max speed setting (default: 600) */

#define MU 	MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MD 	MOVE_VERT(U_MOUSE_MOVE_MAX)
#define ML 	MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MR 	MOVE_HOR(U_MOUSE_MOVE_MAX)

#define U_MOUSE_SCROLL_MAX 100                    /* <--- New max speed setting (default: 10) */

#define SU SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SD SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SL SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SR SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&msc {
  time-to-max-speed-ms = <400>;                 /* <--- How long time until max speed is reached */
};

&mmv {
  time-to-max-speed-ms = <400>;             /* <--- How long time until max speed is reached (default: 500) */
};

#include "combos.dtsi"

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

/ {
    behaviors {
        am: alpha_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_MT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        as: alpha_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_SFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // Easy alt-tab with alt+backspace thumb using mod-morphs
        bstab: backspace_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_TAB";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp TAB>;
            mods = <MOD_LALT>;
        };
        lt_bspc: layer_tap_backspace_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_BT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            bindings = <&mo>, <&bstab>;
        };
    };

    cond_layers {
        compatible = "zmk,conditional-layers";
        // Define FUN layer as tri-state
        func_tristate {
            if-layers = <NAV SYM>;
            then-layer = <FUN>;
        };
    };

    macros {
        ZMK_MACRO(MOUSE_SELECT,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_tap &mkp LCLK>
                , <&macro_tap &to DEF>;
        )
        ZMK_MACRO(to_win,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_tap &kp LC(F2)>
                , <&macro_tap &to CLM>;
        )
        ZMK_MACRO(to_def,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LC(F1)>
                , <&macro_press &to DEF>;
        )
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEF";
            bindings = <
//@format
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp TAB 	  &kp SQT       &kp COMMA     &kp DOT       &kp P         &kp Y             &kp F         &kp G         &kp C         &kp R         &kp L         &kp BSPC
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LCTRL     &kp A         &kp O         &kp E         &kp U   	  &kp I             &kp D         &kp H         &kp T         &kp N         &kp S         &kp RCTRL
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LSHIFT    &am LALT SEMI &am LGUI Q    &kp J         &kp K         &kp X             &kp B         &kp M         &kp W         &am RGUI V    &am RALT Z    &kp RSHIFT
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &lt MOU MEH   &mo SYM       &kp SPACE         &kp ENTER     &mo NAV       &lt FUN HYPER
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        colemak_layer {
            label = "WIN";
            bindings = <
//@format
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &trans        &kp SQT       &kp COMMA     &kp DOT       &kp P         &kp Y             &kp F         &kp G         &kp C         &kp R         &kp L 	  &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LCTRL     &kp A         &kp O         &kp E         &kp U         &kp I             &kp D         &kp H         &kp T         &kp N         &kp S         &kp RCTRL
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LSHIFT    &am LALT SEMI &am LGUI Q    &kp J         &kp K         &kp X             &kp B         &kp M         &kp W         &am RGUI V    &am RALT Z    &kp RSHIFT
// ╰─────────────┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &trans        &trans        &kp SPACE         &kp ENTER     &trans        &trans
//                                           ╰─────────────┴─────────────╯─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        game_layer {
            label = "GME";
            bindings = <
//@format
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &trans        &kp TAB       &kp Q         &kp W         &kp E         &kp R             &kp Y         &kp U         &kp I         &kp O         &kp P          &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp ESC       &kp A         &kp S         &kp D         &kp F             &kp H         &kp J         &kp K         &kp L         &tog GME  	   &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp LSHFT     &kp Z         &kp X         &kp C         &kp V             &kp N         &kp M         &kp COMMA     &kp DOT       &kp SLASH      &trans
// ╰─────────────┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
					      &kp LCTRL     &kp LALT      &kp SPACE         &mo NAV       &kp RET       &tog GME
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
//@format
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &trans 	  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT          &kp CARET      &kp N7        &kp N8        &kp N9        &kp GRAVE    &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans       &kp PLUS      &kp MINUS     &kp EQUAL     &kp UNDER     &kp LC(N6)         &kp N0        &kp N4        &kp N5        &kp N6        &kp TILDE    &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans       &trans         &kp QMARK    &kp PIPE       &kp STAR      &kp AMPS          &kp DOT      &kp N1         &kp N2        &kp N3        &trans       &trans
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &trans         &trans       &trans            &trans        &trans         &trans
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
//@format
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &trans       &kp LA(F4)    &kp TAB_LT    &kp TAB_RT    &none         &kp C_VOL_UP      &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &none         &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans       &kp LCTRL     &kp LGUI      &kp LALT      &am LSHFT TAB  &kp C_VOL_DN      &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans       &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans       &trans         &none         &none         &kp LS(INS)   &kp C_PP          &kp INS       &kp DEL       &kp C_PREV    &kp C_NEXT    &none         &trans
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &trans        &trans        &trans            &trans        &trans        &trans
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        function_layer {
            label = "FUN";
            bindings = <
//@format
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp CAPS      &none         &to_def       &to_win       &to GME      &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &kp F6        &kp F7        &kp F8        &kp F9        &kp F10           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4 &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans         &trans        &none         &kp F11       &kp F12          &out OUT_TOG  &to MOU       &kp PSCRN     &bt BT_CLR     &trans        &trans
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
					      &bootloader   &trans        &reset            &reset        &trans        &bootloader
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        mouse_layer {
            label = "MOU";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &none         &none         &none         &kp PG_DN     &kp PG_UP     &none             &none         &none         &none         &none         &mmv MR       &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &trans        &none         &msc SD       &msc SU       &none             &none         &mmv ML       &none         &none         &MOUSE_SELECT &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &trans        &trans        &mmv MD       &mmv MU       &trans            &trans        &to MOU       &trans        &trans        &trans        &trans
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
					      &none         &none         &mkp LCLK         &mkp RCLK     &none         &none
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    };
};


/*

// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &none         &none         &none         &none         &none         &none             &none         &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none         &none         &none         &none         &none         &none             &none         &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none         &none         &none         &none         &none         &none             &none         &none         &none         &none         &none         &none
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
					      &none         &none         &none             &none         &none         &none
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
*/
