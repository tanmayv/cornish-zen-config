/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define NUMBER 1
#define SYMBOL 2
#define NAVIGATION 3

#define DV_UNDER UNDER
#define DV_MINUS MINUS 
#define DV_PLUS PLUS
#define DV_EQUAL EQUAL
#define DV_LBKT LBKT
#define DV_LBRC UNDER
#define DV_RBKT RBKT
#define DV_RBRC RBRC
#define DV_DQT DQT
#define DV_SQT SQT
#define DV_COLON COLON
#define DV_SEMI SEMI
#define DV_COMMA COMMA
#define DV_DOT DOT
#define DV_LT LT
#define DV_GT GT
#define DV_QMARK QMARK
#define DV_SLASH SLASH

#define MY_Q DQT 
#define MY_W DOT
#define MY_E LT
#define MY_R GT 
#define MY_T Y
#define MY_Y F
#define MY_U G
#define MY_I C
#define MY_O R
#define MY_P L
#define MY_A A
#define MY_S S
#define MY_D E
#define MY_F U
#define MY_G D
#define MY_H D
#define MY_J H
#define MY_K T
#define MY_L N
#define MY_SEMI S
#define MY_Z COLON 
#define MY_X Q
#define MY_C J
#define MY_V K
#define MY_B X
#define MY_N B
#define MY_M M
#define MY_COMMA W
#define MY_DOT V
#define MY_FSLH Z

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

&caps_word {
    continue-list = <UNDERSCORE MINUS LT GT QMARK COLON>;
};

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
              };
            bspc_del: backspace_delete {
                  compatible = "zmk,behavior-mod-morph";
                  label = "BACKSPACE_DELETE";
                  #binding-cells = <0>;
                  bindings = <&kp BACKSPACE>, <&kp DELETE>;
                  mods = <(MOD_LSFT|MOD_RSFT)>;
                  keep-mods = <(MOD_RSFT)>;
              };
          };
          combos {
              compatible = "zmk,combos";
              combos_bsps {
                timeout-ms = <50>;
                key-positions = <19 20 21>;
                bindings = <&kp BSPC>;
                layers = <0>;
                };

              combos_caps {
                timeout-ms = <50>;
                key-positions = <15 16 19 20>;
                bindings = <&caps_word>;
              };
              combos_esc {
                timeout-ms = <50>;
                key-positions = <15 16>;
                bindings = <&kp ESC>;
              };
              combos_tab {
                timeout-ms = <50>;
                key-positions = <2 3>;
                bindings = <&kp TAB>;
                layers = <SYMBOL>;
              };
              combos_rpar {
                timeout-ms = <50>;
                key-positions = <7 8>;
                bindings = <&kp RPAR>;
                layers = <SYMBOL>;
              };
              combos_rbkt {
                timeout-ms = <50>;
                key-positions = <19 20>;
                bindings = <&kp DV_RBKT>;
                layers = <SYMBOL>;
              };
              combos_rbrc {
                timeout-ms = <50>;
                key-positions = <31 32>;
                bindings = <&kp DV_RBRC>; 
                layers = <SYMBOL>;
              };
            };
            macros {
              entry_macro: entry_macro {
                  compatible = "zmk,behavior-macro";
                  label = "ZM_my_macro";
                  #binding-cells = <0>;
                  wait-ms = <30>;
                  tap-ms = <30>;
                  bindings =  <&macro_press &kp LSHIFT>,
                              <&macro_tap &kp Z>,
                              <&macro_release &kp LSHIFT>,
                              <&macro_tap &kp X &kp T &kp P &kp T &kp R &kp AT_SIGN &kp N3 &kp N7 &kp N2 &kp N8 &kp ENTER>;
              };
            };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &none   &kp MY_Q &kp MY_W &kp MY_E &kp MY_R &kp MY_T   &kp MY_Y &kp MY_U  &kp MY_I     &kp MY_O   &kp MY_P    &none
   &none &hm LSHIFT MY_A &hm LCTRL MY_S &hm LALT MY_D &hm LGUI MY_F &kp MY_G   &kp MY_H &hm RGUI MY_J  &hm RALT MY_K     &hm RCTRL MY_L   &hm RSHIFT MY_SEMI &none
   &none &kp MY_Z &kp MY_X &kp MY_C &kp MY_V &kp MY_B   &kp MY_N &kp MY_M  &kp MY_COMMA &kp MY_DOT &kp MY_FSLH &none
                  &kp LGUI &mo 1 &lt SYMBOL SPACE   &lt NUMBER RET &mo NAVIGATION &kp RALT
                        >;
                };
                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&trans &trans &trans &trans &trans &trans      &trans &kp N7 &kp N8 &kp N9 &trans &trans
&trans &trans &trans &trans &trans &trans      &trans &kp N4 &kp N5 &kp N6 &kp N0 &trans
&trans &trans &trans &trans &trans &trans      &trans &kp N1 &kp N2 &kp N3 &trans &trans
                    	     &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  (  |  &  |  *  |  \  |      |
// | CTRL |     |     |     |  ?  |     |   |  -  |  [  |  =  |  /  |  ~  |      |
// | SHFT |     |     |     |  entry_macro|||  _  |  {  |  +  | "|" |  `  |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT        &kp CARET &kp LPAR  &kp AMPS &kp KP_MULTIPLY &kp BSLH &trans
   &trans &trans   &trans &trans   &kp DV_QMARK   &trans      &kp DV_MINUS &kp DV_LBKT  &kp DV_EQUAL &kp DV_SLASH &kp GRAVE &trans
   &trans &trans   &trans &trans   &entry_macro   &trans      &kp DV_UNDER &kp DV_LBRC  &kp DV_PLUS  &kp PIPE &kp TILDE &trans
                    	     &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };
                navigation_layer {
                        label = "NAV";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&trans &trans &trans &trans &trans &trans      &trans &kp HOME &kp END &kp N3 &trans &trans
&trans &kp LSHIFT &kp LCTRL &kp LALT &kp LGUI &trans      &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
&trans &trans &trans &trans &trans &trans      &trans &kp PAGE_DOWN &kp PAGE_UP &kp N3 &trans &trans
                    	     &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };
        };
};
